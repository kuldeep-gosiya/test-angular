{"ast":null,"code":"import { TasksService } from './tasks.service';\nimport { Task } from './schema/tasks';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TasksComponent_tr_17_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" Yes \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksComponent_tr_17_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" No \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction TasksComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 16)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TasksComponent_tr_17_td_3_Template, 2, 0, \"td\", 17);\n    i0.ɵɵtemplate(4, TasksComponent_tr_17_td_4_Template, 2, 0, \"td\", 17);\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.viewTask(task_r2._id));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteTask(task_r2._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, task_r2.complete ? \"lightgreen\" : \"white\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.task_name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == false);\n  }\n}\nexport class TasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.task = new Task();\n    this._id = '';\n    this.task_name = '';\n    this.complete = false;\n  }\n  ngOnInit() {\n    this.viewTasks();\n  }\n  viewTasks() {\n    this.taskService.getTasks().subscribe({\n      next: data => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  viewTask(id) {\n    //var tasks=this.tasks;\n    this.taskService.viewTask(id).subscribe({\n      next: data => {\n        this.task = data;\n        this._id = this.task._id;\n        this.task_name = this.task.task_name;\n        this.complete = this.task.complete;\n      }\n    });\n  }\n  addeditTask(addoredit) {\n    const newTask = {\n      task_name: this.task_name,\n      complete: this.complete\n    };\n    if (this._id == '0') {\n      //this.taskService.addTask(newTask).subscribe(({task})=>{this.tasks.push(task);})\n      this.taskService.addTask(newTask).subscribe(data => alert('Task added'));\n    } else {\n      this.taskService.updateTask(this._id, newTask).subscribe(data => alert('Task updated'));\n    }\n  }\n  deleteTask(id) {\n    var tasks = this.tasks;\n    this.taskService.deleteTask(id).subscribe(data => {\n      // if(data.n==1){\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i]._id == id) {\n          tasks.splice(i, 1);\n        }\n        // }\n      }\n    });\n  }\n\n  reloadpage() {\n    window.location.reload();\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  features: [i0.ɵɵProvidersFeature([TasksService])],\n  decls: 38,\n  vars: 3,\n  consts: [[\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#myModal\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [2, \"width\", \"100%\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"myModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [\"myForm\", \"\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"task_name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"complete\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save\", 1, \"btn\", \"btn-success\"], [3, \"ngStyle\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Task Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx._id = \"0\";\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵtext(3, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"table\", 1)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, TasksComponent_tr_17_Template, 11, 6, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"button\", 7)(23, \"span\", 8);\n      i0.ɵɵtext(24, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 9)(26, \"form\", 10, 11);\n      i0.ɵɵlistener(\"submit\", function TasksComponent_Template_form_submit_26_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx.addeditTask(ctx._id);\n        ctx.reloadpage();\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵelementStart(28, \"div\", 12)(29, \"div\")(30, \"label\");\n      i0.ɵɵtext(31, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.task_name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\")(34, \"label\");\n      i0.ɵɵtext(35, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.complete = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(37, \"input\", 15);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.task_name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.complete);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}